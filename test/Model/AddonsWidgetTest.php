<?php
/**
 * AddonsWidgetTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Divar\KenarApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * divar_interface/open_platform/chatapi/chatapi.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Divar\KenarApiClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * AddonsWidgetTest Class Doc Comment
 *
 * @category    Class
 * @description AddonsWidget
 * @package     Divar\KenarApiClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class AddonsWidgetTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "AddonsWidget"
     */
    public function testAddonsWidget()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "event_row"
     */
    public function testPropertyEventRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "button_bar"
     */
    public function testPropertyButtonBar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "title_row"
     */
    public function testPropertyTitleRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtitle_row"
     */
    public function testPropertySubtitleRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "selector_row"
     */
    public function testPropertySelectorRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "score_row"
     */
    public function testPropertyScoreRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "image_carousel_row"
     */
    public function testPropertyImageCarouselRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "group_info_row"
     */
    public function testPropertyGroupInfoRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "evaluation_row"
     */
    public function testPropertyEvaluationRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description_row"
     */
    public function testPropertyDescriptionRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "semantic_paths"
     */
    public function testPropertySemanticPaths()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
